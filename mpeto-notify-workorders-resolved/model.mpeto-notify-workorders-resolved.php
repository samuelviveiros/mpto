<?php

// PHP Data Model definition file

// WARNING - WARNING - WARNING
// DO NOT EDIT THIS FILE (unless you know what you are doing)
//
// If you use supply a datamodel.xxxx.xml file with your module
// the this file WILL BE overwritten by the compilation of the
// module (during the setup) if the datamodel.xxxx.xml file
// contains the definition of new classes or menus.
//
// The recommended way to define new classes (for iTop 2.0) is via the XML definition.
// This file remains in the module's template only for the cases where there is:
// - either no new class or menu defined in the XML file
// - or no XML file at all supplied by the module


class NotifyWorkOrdersResolved implements iApplicationUIExtension
{
	public function OnDisplayProperties($oObject, WebPage $oPage, $bEditMode = false) {}
	public function OnDisplayRelations($oObject, WebPage $oPage, $bEditMode = false) {}
	public function OnFormSubmit($oObject, $sFormPrefix = '') {}
	public function OnFormCancel($sTempId) {}
	public function EnumUsedAttributes($oObject) {}
	public function GetIcon($oObject) {}

	public function GetHilightClass($oObject)
	{
		if ( $oObject instanceof UserRequest && ($oObject->Get("status") === "assigned" || $oObject->Get("status") === "pending") )
		{
			// Traz todas as Tarefas associadas com a solicitação, independentemente do status das Tarefas.
			$sOQLWorkOrder = "SELECT WorkOrder AS w WHERE w.ticket_ref = '".$oObject->Get("friendlyname")."'";
			$oSetWorkOrder = new DBObjectSet(DBObjectSearch::FromOQL($sOQLWorkOrder));

			// Se a Solicitação (UserRequest) não tem Tarefas (WorkOrders), 
			// retorna HILIGHT_CLASS_NONE.
			if ( $oSetWorkOrder->Count() <= 0 )
			{
				return HILIGHT_CLASS_NONE;
			}

			// Se houver alguma Tarefa NÃO resolvida, retorna HILIGHT_CLASS_NONE.
			// Caso contrário -- se todas foram resolvidas -- retorna HILIGHT_CLASS_OK.
			$oSetWorkOrder->Rewind();
			while ( $oWorkOrder = $oSetWorkOrder->Fetch() )
			{
				if ( $oWorkOrder->Get("status") !== "resolved" && $oWorkOrder->Get("status") !== "canceled" )
				{
					return HILIGHT_CLASS_NONE;
				}
			}

			//return HILIGHT_CLASS_READY;
			return HILIGHT_CLASS_OK;
		}
		return HILIGHT_CLASS_NONE;
	}

	public function EnumAllowedActions(DBObjectSet $oSet)
	{
		return array();
	}
}

?>
